".source.js, .source.ts, .source.tsx":

  "expect: to.equal":
    "prefix": "exe"
    "body":
      """
      expect(${1:value}).to.equal(${2:result});$0
      """

  "expect: to.eql":
    "prefix": "exee"
    "body":
      """
      expect(${1:value}).to.eql(${2:result});$0
      """


  "expect: NOT to.equal":
    "prefix": "ene"
    "body":
      """
      expect(${1:value}).not.to.equal(${2:result});$0
      """


  "expect: NOT to.eql":
    "prefix": "enee"
    "body":
      """
      expect(${1:value}).not.to.eql(${2:result});$0
      """



  "expect: to throw":
    "prefix": "ett"
    "body":
      """
      let fn = () => {$0};
      expect(fn).to.throw(/${1:error-text}/);
      """


  "expect: instanceof type":
    "prefix": "eit"
    "body":
      """
      expect(${1:value}).to.be.an.instanceof(${2:Type});$0
      """


  "expect: include":
    "prefix": "exi"
    "body":
      """
      expect(${1:value}).to.include("${2:text}");$0
      """
